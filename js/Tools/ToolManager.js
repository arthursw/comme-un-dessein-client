// Generated by CoffeeScript 1.10.0
(function() {
  var dependencies;

  dependencies = ['Utils/Utils', 'Tools/Tool', 'Tools/MoveTool', 'Tools/SelectTool', 'Tools/PathTool', 'Tools/EraserTool', 'Tools/ItemTool', 'Tools/LockTool', 'Tools/MediaTool', 'Tools/TextTool', 'Tools/GradientTool'];

  if (typeof document !== "undefined" && document !== null) {
    dependencies.push('Tools/ScreenshotTool');
    dependencies.push('Tools/CarTool');
  }

  define(dependencies, function(Utils, Tool) {
    var ToolManager;
    ToolManager = (function() {
      function ToolManager() {
        var defaultFavoriteTools, error, error1;
        R.ToolsJ = $(".tool-list");
        R.favoriteToolsJ = $("#FavoriteTools .tool-list");
        R.allToolsContainerJ = $("#AllTools");
        R.allToolsJ = R.allToolsContainerJ.find(".all-tool-list");
        R.favoriteTools = [];
        if (typeof localStorage !== "undefined" && localStorage !== null) {
          try {
            R.favoriteTools = JSON.parse(localStorage.favorites);
          } catch (error1) {
            error = error1;
            console.log(error);
          }
        }
        R.tools.move = new R.Tools.Move();
        R.tools.select = new R.Tools.Select();
        R.tools.eraser = new R.Tools.Eraser();
        defaultFavoriteTools = [];
        while (R.favoriteTools.length < 8 && defaultFavoriteTools.length > 0) {
          Utils.Array.pushIfAbsent(R.favoriteTools, defaultFavoriteTools.pop().label);
        }
        R.tools.move.select();
        R.wacomPlugin = document.getElementById('wacomPlugin');
        if (R.wacomPlugin != null) {
          R.wacomPenAPI = wacomPlugin.penAPI;
          R.wacomTouchAPI = wacomPlugin.touchAPI;
          R.wacomPointerType = {
            0: 'Mouse',
            1: 'Pen',
            2: 'Puck',
            3: 'Eraser'
          };
        }
        return;
      }

      return ToolManager;

    })();
    return ToolManager;
  });

}).call(this);
